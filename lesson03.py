#--------------------- разбор дз -----------------------------#
'''
salaries = [2500, 3200, 2700, 2900, 3100]

for i in range(len(salaries)):
    # print(i, salaries[i])
    if salaries[i] != 2800:
        salaries[i] = 2800
print(f'Согласно новой политике, все зарплаты были уравнены до среднего значения в размере $2880, \n'
      f'Новые заралпаты сотрудников:', end=' ')
# --- 1-ое решение --- #
#[print(s, end=', ') for s in salaries[:-1]] # аналог работы цикл for
# print(salaries[-1])

# --- 2-ое решение (такое же, только в полном варианте) --- #
for i, s in enumerate(salaries):
    if i != len(salaries) - 1:
        print(s, end=', ')
    else:
        print(s)
'''
import time

#--------------------- Работа с коллекциями -----------------------------#
# s = [7, 0, 89, 78, 555, 444, 8, 888]
#print(s[0])
#print(s[-1])
# n = 798
# n % 10 - последня цифра в числе
# for el in s:
#     if el % 10 == 8:
#         print(el)
# print('Кол-во 0: ', s.count(0))




# ----------- срезы -------------- #
# s = [7, 0, 89, 78, 555, 444, 8, 888]
# # s[start : end : step]  end НЕ включается
# print('s[2:5]  -> ', s[2:5])
# print('s[2:5:2]  -> ', s[2:5:2])
# print('s[:]  -> ', s[:])
# print('s[:-1]  -> ', s[:-1])
# print('s[1:]  -> ', s[1:])
# print('s[::-1]  -> ', s[::-1]) # обратный порядок в списке
#reverse_s = s[::-1]


# -------------Задача-------------- #

'''
дан список 
необходимо получить новый список, кроме 0-ой и последнего элемента
полученный список должен быть сформирован в обратном порядке

входные: [6, 79, 56, 23]
выходные: [56, 79]
'''
list_ = [6, 79, 56, 23]
new_list = list_[1:-1][::-1]
#print(new_list)


# # -------------Задача-------------- #
# '''
# дан список
# необхоимо вырезать середину в списке. Если кол-во элементов
#  четное, то вырезать 2 эл из середины
#
# входные: [6, 79, 3, 56, 23]
# выходные: [6, 79, 56, 23]
#
# входные: [6, 79, 56, 23]
# выходные: [6, 23]
# '''
# s = [6, 79, 3, 56, 23]
# print(s)
# if len(s) % 2 != 0:
#    m = len(s) // 2
#    print(s[:m]+s[m+1:])
# else:
#     m = len(s) // 2
#     print(s[:m-1]+s[m+1:])



# ------turtle------- #
# from turtle import *
# forward(100)
# color('red')
# backward(10)
# left(90)
# right(130)
# circle(50)
# color('blue')
# for i in range(4):
#     forward(100)
#     left(90)
# time.sleep(5)




# ---------------  Коллекции  ---------------- #
# tuple Кортеж - неизменяемый набор элементов
# Редактировать, добавлять, удалять - Запрещено
#t = (1, 5, 5, 7)
#print(t[0])
#t[0] = 6 #TypeError: 'tuple' object does not support item assignment
'''
Подумать дома!!!
t1 = (5, [3, 4, 6])
# t1[1][0] = 0 # Почему не будет ошибки?
#
t2 = 5, 4, 6
t2 = 3, 4, 6 # Почему не будет ошибки?
'''






# # ------------  Множества ---------------- #
# # set множества - содержит только уникальный набор элементов
# # добавить можно, но удалить и редактировать нельзя
# s1 = {5, 1, 11, 0, 21, 6}
# print(type(s1), s1)
# s1.add(7)
# print(s1)
# s1.add(1) # Нельзя добавить так как он есть
# print(s1)
# #s1[0] #TypeError: 'set' object is not subscriptable
# for el in s1:
#     print(el)
#
# # ----- пример ------ #
# l = [1, 23, 23, 1]
# new_l = list(set(l)) # Удалить дубликаты
# print(new_l)



#  ------------  Словарь ---------------- #
# Словарь dict - ассоциативный массив
d = {'ключ': 'значение'}



