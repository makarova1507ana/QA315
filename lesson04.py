# # Задание 1
# '''
# Описание задание
# '''
# from time import sleep
#
# print("решение")
#
# # -------- разбор задач  ------ #
# # задача
# # Дано:
# # n - кол-во сторон (гарантируется, что число целое)
# # a - сторона многоугольника
# # is_fill - нужно залить фигуру (гарантируется, что будет использован только логический тип данных)
# # нарисовать ПРАВИЛЬНЫЙ многоугольник по заданным характеристикам
# #
# # УСЛОЖНЕНИЕ(необязательно делать) (добавьте еще одну переменную, хочет ли пользователь,
# # чтобы каждая сторона многоугольника была разного цвета)
#
#
# from turtle import *
# from random import *
# n = 4#int(input('Введите количество сторон многоугольника: '))
# a = 100#int(input('Введите длинну стороны многоугольника: '))
# col = 'red'#input('Введите название цвета на английском или значение в формате #RRGGBB: ')
# line_color = 1#int(input('Хотите ли вы чтобы каждая сторона многоугольника была разного цвета? \n 1. Да \n 2. Нет \n'))
# b = 1
# c = 0
# colors = ['red', 'green', 'blue', 'orange', 'purple', 'pink', 'yellow']
# fillcolor(col)
# begin_fill()
# right(90)
# for i in range(n):
#     forward(a)
#     right(360 / n)
#     if line_color == 1:
#         for count in range(n):
#             color_line = choice(colors)
#             color(color_line)
# color(col)
# end_fill()
# sleep(5)








# # ---------- Словари ----------- #
# # Словарь dict - ассоциативный массив
# d = {'ключ': 'значение*',
#      'ключ1': 'значение#'} # ключ - должен быть уникальный
#
# # чтение
# print(d['ключ'])
# # print(d['Ключ']) # KeyError: 'Ключ'
# print('все значения:', d.values())
# print('Все ключи: ', d.keys())
#
# # добавление
# d[5] = [0, 67]
# print(d)
#
# # редактирование
# d['ключ1'] = 1
# print(d)
#
# # удаление
# d.pop(5)
# print(d)


# # ------------------------------------- Задача ------------------------------------------------#
# # пользователь вводит номер месяца, необходимо
# # отобразить кол-во дней (нельзя использовать сторонние модули)
# months = {1: 31,
#           2: [28, 29],
#           3: 31,
#           4: 30,
#           5: 31,
#           6: 30,
#           7: 31,
#           8: 31,
#           9: 30,
#           10: 31,
#           11: 30,
#           12: 31}
# month = 0
# if month in months.keys():
#     print(f'Месяц {month} : {months[month]}')
# else:
#     print("Invalid month")



# #—------------------------------- Задача —--------------------------------#
# '''
# дан  словарь. Напиши CLI(консольную программу) для получение информации о товаре.
# ПРИМЕР словаря.
#     {
#       "название": "Смартфон",
#       "цена": 500,
#       "категория": "Электроника"
#     }
#
# входные: Смартфон
# выходные: цена: 500, категория: Электроника
#
# входные: Телефон
# выходные: Такого товаре нет
# '''
# product = {"название": "Смартфон",
#            "цена": 500,
#            "категория": "Электроника"}
#
# name = "Смартфон2" #input
# if name in product.values():# product.values() -> ["Смартфон", 500, "Электроника"]
#     print(f'цена: {product["цена"]}, категория: {product["категория"]}')
# else:
#     print('Такого товаре нет')

# ------------------------------------- Задача ------------------------------------------------#
'''
В лесу живут разные животные, и у каждого есть свой домик с номером.
Информация о животных и номерах их домиков записана в словаре, где ключ — это имя животного,
а значение — номер домика.
Нужно написать программу, которая поможет найти, в каком домике живет заданное животное.
Данные для примера: {"Заяц": 23, "Волк": 45, "Медведь": 77}
Input: Заяц
output: 23
'''
#
#
# animals = {"Заяц": 23,
#            "Волк": 45,
#            "Медведь": 77}
# animal = "Волк" # input
# if animal in animals.keys():
#     print(f'{animal} живет в доме {animals[animal]}')
# else:
#     print('у нас такие не живут')

# # ------------------------------------- Задача ------------------------------------------------#
# '''
# **Условие**: У каждого пирата есть карта, которая представлена в виде словаря,
# где ключ — это остров, а значение — это количество зарытых сокровищ на этом острове.
# Необходимо написать программу, которая найдёт остров с максимальным количеством сокровищ.
#
# **Данные для примера**: `{"Остров Сокровищ": 5, "Необитаемый остров": 3, "Остров Снов": 7}`
#
# выходные данные: "Остров Снов": 7
# '''
#
# map = {"Остров Сокровищ": 5, "Необитаемый остров": 3, "Остров Снов": 7}
# max_treasure = 0
# island = ''
# for key in map:
#     # print(key, map[key])
#     if max_treasure < map[key]:
#         max_treasure = map[key]
#         island = key
# print(f'остров: {island} / кол-во сокровищ: {max_treasure}')

# -----max min sum sort------#
# map filter ... сами

# s = [56, 67, 89, 78]
# print(max(s))

# s = [56, 67, 89, 78]
# s.sort()
# print(s)

# map = {"Остров Сокровищ": 5, "Необитаемый остров2": 7, "Необитаемый остров": 3, "Остров Снов": 7}
# max_treasure = max(map.values())
# islands = []
# for island in map:
#     if max_treasure == map[island]:
#         islands.append(island)
# print(f"Кол-во на одном: {max_treasure} \ на {islands} ")


#
# # ------------------------------------Задача------------------------------#
# # # Дан список чисел, необходимо посчитать кол-во каждого уникального числа
# # # и сформировать из этих данных словарь
# # input: nums = [56, 56, 60, 34, 60]
# # output: {56: 2, 60: 3, 34: 1}
# list_nums = [56, 56, 60, 34, 60, 60]
# unique_nums = set(list_nums)
# result = {}
# for num in unique_nums:
#     #print(num, list_nums.count(num))
#     key, value = num, list_nums.count(num)
#     result[key] = value
# print(result)




#
# # # ------------------------------------Задача------------------------------#
# '''
# **Задача: "Управление финансами счетовода Карла"**
#
# Карл - счетовод в небольшой компании, но его математические навыки оставляют желать лучшего.
# Ему необходимо создать программу для учета финансов компании за месяц.
# Напишите программу, которая поможет Карлу вычислить общий доход, общие расходы и остаток средств за месяц на основе предоставленных списков доходов и расходов.
# Результат работы программы должен быть словарь
# **Пример:**
#
# *Входные данные:*
#
# ```
# Список доходов: [1000, 500, 700]
# Список расходов: [300, 200, 400]
# ```
#
# *Выходные данные:*
#
# ```
# Общий доход: 2200
# Общие расходы: 900
# Остаток средств: 1300
# ```
#
#
#
# '''
#
# income = [1000, 500, 700]
# expenses = [300, 200, 400]
# total_income = sum(income)
# total_expenses = sum(expenses)
# balance = total_income - total_expenses
# dict = {'income': total_income,
#         'expenses': total_expenses,
#         'balance': balance}
# print(dict)


# ----- пример ------ #
test_case1 = {'username': 'username1',
             'password': 'password1'}